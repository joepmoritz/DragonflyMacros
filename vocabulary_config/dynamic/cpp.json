[{
	"name": "cpp_keywords",
	"tags": ["keywords", "cpp_file"],
	"vocabulary": {
		"and": "&&",
		"or": "||",
		"auto": "auto",
		"bool": "bool",
		"boolean": "bool",
		"char": "char",
		"integer": "int",
		"int": "int",
		"unsigned": "unsigned",
		"float": "float",
		"double": "double",
		"size T": "size_t",
		"new":     "new",
		"delete": "delete",
		"continue":   "continue;",
		"break":   "break;",
		"true":    "true",
		"false":   "false",
		"return":  "return",
		"enum": "enum",
		"struct": "struct",
		"class": "class",
		"namespace": "namespace",
		"switch": "switch",
		"case": "case",
		"throw":   "throw",
		"void": "void",
		"operator": "operator",
		"static": "static",
		"null pointer": "nullptr",
		"typename": "typename",
		"using": "using",
		"typedef": "typedef",
		"extern": "extern",
		"inline": "inline",
		"const":   "const"
	}
},
{
	"name": "cpp_functions",
	"tags": ["functions", "cpp_file"],
	"vocabulary": {
		"func print F":                  "printf",
		"func assert":                  "assert",
		"func static cast":           "static_cast<$1>",
		"func dynamic cast":           "dynamic_cast<$1>",
		"func move": "move",
		"STD move": "std::move",
		"STD nth element": "std::nth_element",
		"STD make unique": "std::make_unique<$1>",
		"STD make shared": "std::make_shared<$1>",
		"STD string": "std::string",
		"STD to string": "std::to_string",
		"FS path": "fs::path",
		"FS exists": "fs::exists",
		"FS create directory": "fs::create_directory",
		"FS create directories": "fs::create_directories",
		"FS directory iterator": "fs::directory_iterator",
		"FS recursive directory iterator": "fs::recursive_directory_iterator",
		"met path": ".path",
		"met string": ".string",
		"met entry": ".entry",
		"met parent path": ".parent_path",
		"met filename": ".filename",
		"met is absolute": ".is_absolute",
		"met is relative": ".is_relative",
		"func deco type": "decltype",
		"func sort": "sort",
		"func begin": "begin",
		"func end": "end",
		"func C begin": "cbegin",
		"func C end": "cend",
		"func find": "find",
		"func find if": "find_if",
		"met get": ".get",
		"met value or": ".value_or",
		"met has value": ".has_value",
		"met begin": ".begin",
		"met end": ".end",
		"met C begin": ".cbegin",
		"met C end": ".cend",
		"met size": ".size",
		"met reserve": ".reserve",
		"met at": ".at",
		"met find": ".find",
		"met count": ".count",
		"met empty": ".empty",
		"met erase": ".erase",
		"met insert": ".insert",
		"met insert or assign": ".insert_or_assign",
		"met pop": ".pop",
		"met push": ".push",
		"met emplace": ".emplace",
		"met try emplace": ".try_emplace",
		"met emplace back": ".emplace_back",
		"met pushback":          ".push_back"
	}
},
{
	"name": "C plus plus",
	"tags": ["sublime", "cpp_file"],
	"vocabulary": {
		"you int eight": "uint8_t",
		"you int 32": "uint32_t",
		"you int 64": "uint64_t",
		"O E Localizer": "OE::Localizer::",
		"O E Tracking": "OE::Tracking::",
		"O E N F T": "OE::NFT::",
		"const auto ref": "const auto& ",
		"const auto": "const auto ",
		"using STD": "using namespace std;",
		"template":           "template<>{{left}}",
		"STD unique pointer":           "std::unique_ptr<>{{left}}",
		"STD shared pointer":           "std::shared_ptr<>{{left}}",
		"STD optional":          "std::optional<>{{left}}",
		"STD tuple":          "std::tuple<>{{left}}",
		"STD vector":          "std::vector<>{{left}}",
		"STD map":          "std::map<>{{left}}",
		"STD set":          "std::set<>{{left}}",
		"STD unordered map":          "std::unordered_map<>{{left}}",
		"STD unordered set":          "std::unordered_set<>{{left}}",
		"STD": "std::",
		"C out": "cout << ",
		"C error": "cerr << ",
		"Eigen": "Eigen::",
		"C V Mat": "cv::Mat",
		"Matrix 3D": "Matrix3d",
		"Vector 2D": "Vector2d",
		"Vector 3D": "Vector3d",
		"include": "#include ",
		"pragma once": "#pragma once"
	},
	"shortcuts": {
		"arrow": "c-dot"
	}
}]